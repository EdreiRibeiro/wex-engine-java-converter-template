<?xml version="1.0" ?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 0.5" "http://jpf.sourceforge.net/plugin_0_5.dtd">
<!-- replace 'bootstrap' with your plugin's name -->
<plugin id="bootstrap.plugin" version="!PROJECT_VERSION">
   <attributes>
      <attribute id="name" value="converter-bootstrap"/>
      <attribute id="description" value="Bootstrap Java Converter"/>
   </attributes>
  <requires>
    <import plugin-id="main.plugin" />
  </requires>
  <runtime>
    <library id="converter-bootstrap" path="lib/!PROJECT_JAR" type="code"/>
    <!-- If your converter requires additional dependencies that need to be packaged
         you will need to include those here as well -->
    <!-- Example: If you wanted to include commons imaging:
         <library id="commons-imaging:commons-imaging:jar:1.0-SNAPSHOT" path="lib/commons-imaging-1.0-SNAPSHOT.jar" type="code"/>
     -->
  </runtime>
  <extension plugin-id="main.plugin" point-id="com.ibm.dataexplorer.converter.ByteArrayConverter"
             id="bootstrap-converter">
    <parameter id="class" value="com.ibm.dataexplorer.converters.bootstrap.BootstrapByteArrayConverterExample"/>
  </extension>
  <!--
  TODO: If your converter is providing multiple VSE functions which need to invoke different Java Converter classes
  Declare an additional extension as below, then refer to it as bootstrap.plugin@another-converter in your VSE function
  -->
  <extension plugin-id="main.plugin" point-id="com.ibm.dataexplorer.converter.FileConverter" id="bootstrap-file-converter">
    <parameter id="class" value="com.ibm.dataexplorer.converters.bootstrap.BootstrapFileConverterExample"/>
  </extension>
</plugin>
